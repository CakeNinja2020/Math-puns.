import matplotlib.pyplot as plt
import numpy as np
from tkinter import *



def mainMenu():
    window = Tk()
    window.geometry("400x200")
    window.title("Menu")

    def beregn():
        if x_et_function.get() and x_to_function.get() and linspace_start_entry.get() and linspace_slut_entry.get():
            x = np.linspace(int(linspace_start_entry.get()), int(linspace_slut_entry.get()), 100)
        else:
            error_text = Label(window, text="ERROR: Skriv venligst flere informationer.")
            error_text.place(relx=0.5, rely=0.75, anchor=CENTER)
            error_text.after(5000, lambda: error_text.destroy())

        # fjerdegrads
        if a_function.get() and b_function.get() and c_function.get() and d_function.get() and e_function.get():
            y = int(a_function.get()) * x ** 4 + int(b_function.get()) * x ** 3 + int(c_function.get()) * x ** 2 + int(
                d_function.get()) * x + int(e_function.get())

            x_et = int(x_et_function.get())
            x_to = int(x_to_function.get())
            last_slope_fjerde = 0
            print("x1: ", x_et, "x2: ", x_to)
            for i in range(500):
                plt.axvline(color="grey")
                plt.axhline(color="grey")
                plt.xlabel("x")
                plt.ylabel("y")
                x_to = x_et+x_to
                print("før lort x1: ", x_et, "x2: ", x_to)
                y_et = int(a_function.get()) * x_et ** 4 + int(b_function.get()) * x_et ** 3 + int(
                    c_function.get()) * x_et ** 2 + int(d_function.get()) * x_et + int(e_function.get())
                y_to = int(a_function.get()) * x_to ** 4 + int(b_function.get()) * x_to ** 3 + int(
                    c_function.get()) * x_to ** 2 + int(d_function.get()) * x_to + int(e_function.get())

                slope_one = float((y_to - y_et) / (x_to - x_et))
                plt.axline((x_et, y_et), slope=slope_one, color="red", label="linje 2")
                x_to = x_to-x_et
                x_to = x_to / 2
                print("x1: ", x_et, "x2: ", x_to, "slope: ", slope_one)
                plt.plot(x, y, label="linje 1")
                plt.show()
                if abs(abs(slope_one) - abs(last_slope_fjerde)) < 0.001:
                    print("Det tog ", i, " omgange og  hældningen fra din tangent er: ", slope_one)
                    #reslutat_fjerde = Label(window, text=("funktionen for din tanget er:\n" , slope_one,"x + (", ))
                    #reslutat_fjerde.place(relx=0.8, rely=0.9, ANCHOR=CENTER)
                    break
                else:
                    last_slope_fjerde = slope_one
            else:
                pass


        # tredjegrads
        elif a_function.get() and b_function.get() and c_function.get() and d_function.get():
            y = int(a_function.get()) * x ** 3 + int(b_function.get()) * x ** 2 + int(c_function.get()) + int(
                d_function.get())

            x_et = int(x_et_function.get())
            x_to = int(x_to_function.get())
            last_slope_tredje = 0
            print("x1: ", x_et, "x2: ", x_to)
            for i in range(500):
                plt.axvline(color="grey")
                plt.axhline(color="grey")
                plt.xlabel("x")
                plt.ylabel("y")
                x_to = x_to - x_et
                print("før lort x1: ", x_et, "x2: ", x_to)
                y_et = int(a_function.get()) * x_et ** 3 + int(b_function.get()) * x_et ** 2 + int(
                    c_function.get()) * x_et + int(d_function.get())
                y_to = int(a_function.get()) * x_to ** 3 + int(b_function.get()) * x_to ** 2 + int(
                    c_function.get()) * x_et + int(d_function.get())

                slope_one = float((y_to - y_et) / (x_to - x_et))
                plt.axline((x_et, y_et), slope=slope_one, color="red", label="linje 2")

                x_to = x_to / 2
                print("x1: ", x_et, "x2: ", x_to, "slope: ", slope_one)
                plt.plot(x, y, label="linje 1")
                plt.show()
                if abs(abs(slope_one) - abs(last_slope_tredje)) < 0.001:
                    print(i)
                    break
                else:
                    last_slope_tredje = slope_one
            else:
                print("Det tog ", i, " omgange og  hældningen fra din tangent er: ", slope_one)



        # andengradse
        elif a_function.get() and b_function.get() and c_function.get():
            y = int(a_function.get()) * x ** 2 + int(b_function.get()) * x + int(c_function.get())

            x_et = int(x_et_function.get())
            x_to = int(x_to_function.get())
            last_slope_anden = 0
            for i in range(50):
                plt.axvline(color="grey")
                plt.axhline(color="grey")
                plt.xlabel("x")
                plt.ylabel("y")
                x_to = x_et + x_to
                y_et = int(a_function.get()) * x_et ** 2 + int(b_function.get()) * x_et + int(c_function.get())
                y_to = int(a_function.get()) * x_to ** 2 + int(b_function.get()) * x_to + int(c_function.get())
                slope_one = (y_to - y_et) / (x_to - x_et)
                plt.axline((x_et, y_et), slope=slope_one, color="red", label="linje 2")
                x_to = x_to - x_et
                x_to = x_to / 2
                print(y_et, y_to, x_et, x_to, slope_one)
                plt.plot(x, y, label="linje 1")
                plt.show()
                if abs(abs(slope_one) - abs(last_slope_anden)) < 0.001:
                    print(i)
                    break
                else:
                    last_slope_anden = slope_one
            else:
                print("Donezo")
                print("Det tog ", i, " omgange og  hældningen fra din tangent er: ", slope_one)

        # førstegrads
        elif a_function.get() and b_function.get():

            plt.axvline(color="grey")
            plt.axhline(color="grey")

            y = int(a_function.get()) * x + int(b_function.get())
            plt.plot(x, y)
            plt.show()
        else:
            error_text = Label(window, text="ERROR: Skriv venligst flere informationer.")
            error_text.place(relx=0.5, rely=0.75, anchor=CENTER)
            error_text.after(5000, lambda: error_text.destroy())


    betalButton = Button(window, text="Plot", command=beregn, background="black", foreground="red", height=1,
                         width=18)
    betalButton.place(relx=0.25, rely=0.87, anchor=CENTER)

    # a, b, c, d og e placering
    # a:
    a_function = Entry(window, width=4)
    a_function.place(relx=0.1, rely=0.2, anchor=CENTER)
    a_label = Label(window, text="a")
    a_label.place(relx=0.05, rely=0.2, anchor=CENTER)

    # b:
    b_function = Entry(window, width=4)
    b_function.place(relx=0.1, rely=0.3, anchor=CENTER)
    b_label = Label(window, text="b")
    b_label.place(relx=0.05, rely=0.3, anchor=CENTER)
    # c:
    c_function = Entry(window, width=4)
    c_function.place(relx=0.1, rely=0.4, anchor=CENTER)
    c_label = Label(window, text="c")
    c_label.place(relx=0.05, rely=0.4, anchor=CENTER)
    # d:
    d_function = Entry(window, width=4)
    d_function.place(relx=0.1, rely=0.5, anchor=CENTER)
    d_label = Label(window, text="d")
    d_label.place(relx=0.05, rely=0.5, anchor=CENTER)
    # e:
    e_function = Entry(window, width=4)
    e_function.place(relx=0.1, rely=0.6, anchor=CENTER)
    e_label = Label(window, text="e")
    e_label.place(relx=0.05, rely=0.6, anchor=CENTER)

    # X_et
    x_et_function = Entry(window, width=4)
    x_et_function.place(relx=0.575, rely=0.3, anchor=CENTER)
    x_et_label = Label(window, text="Hvad er din x1")
    x_et_label.place(relx=0.425, rely=0.3, anchor=CENTER)
    # X_to
    x_to_function = Entry(window, width=4)
    x_to_function.place(relx=0.575, rely=0.5, anchor=CENTER)
    x_to_label = Label(window, text="Hvad er din Delta_x")
    x_to_label.place(relx=0.4, rely=0.5, anchor=CENTER)

    # Start punkt for graf
    linspace_start_entry = Entry(window, width=4)
    linspace_start_entry.place(relx=0.9, rely=0.25, anchor=CENTER)
    linspace_start_text = Label(window, text="Hvor skal din\ngraf starte?")
    linspace_start_text.place(relx=0.75, rely=0.25, anchor=CENTER)
    # Slut punkt for graf
    linspace_slut_entry = Entry(window, width=4)
    linspace_slut_entry.place(relx=0.9, rely=0.50, anchor=CENTER)
    linspace_slut_text = Label(window, text="Hvor skal din\ngraf slutte?")
    linspace_slut_text.place(relx=0.75, rely=0.5, anchor=CENTER)


    window.mainloop()


mainMenu()
